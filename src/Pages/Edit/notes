// import React, { useState } from 'react';
// import { useMovies } from '../../components/Context/MovieContext';
// import './Edit.css';
// import { DataGrid } from '@mui/x-data-grid'; 

// const MovieList = () => {
//   const { movies, updateMovie } = useMovies();
//   const [editId, setEditId] = useState(null); 
//   const [newRating, setNewRating] = useState('');
//   const [newReleaseDate, setNewReleaseDate] = useState('');

//   const handleEdit = (movie) => {
//     setEditId(movie.id);
//     setNewRating(movie.vote_average);
//     setNewReleaseDate(movie.release_date);
//   };

//   const handleSave = (id) => {
//     updateMovie(id, newRating, newReleaseDate);
//     setEditId(null); 
//   };

  

//   return (

    
//     <div className='edit'>
//       <span className='pagetitle'>Edit</span>
//       {movies.map(movie => (
//         <div key={movie.id}>
//           <h4>{movie.title}</h4>
//           {editId === movie.id ? (
//             <div >
//               <input className='inputfield'
//                 type="number"
//                 value={newRating}
//                 onChange={(e) => setNewRating(e.target.value)}
//               />
//               <input className='inputfield'
//                 type="date"
//                 value={newReleaseDate}
//                 onChange={(e) => setNewReleaseDate(e.target.value)}
//               />
//               <button className='button' onClick={() => handleSave(movie.id)}>Save</button>
//             </div>
//           ) : (
//             <div>
//               <p>Rating: {movie.vote_average}</p>
//               <p>Release Date: {movie.release_date}</p>
//               <button onClick={() => handleEdit(movie)}>Edit</button>
//             </div>
//           )}
//         </div>
//       ))}
//     </div>
//   );
// };

// export default MovieList;



import React, { useState, useEffect } from 'react';
import { useMovies } from '../../components/Context/MovieContext';
import { DataGrid } from '@mui/x-data-grid';
import './Edit.css';



const MovieList = () => {
  const { movies, updateMovie } = useMovies();
  const [rows, setRows] = useState([]);
  

  useEffect(() => {
    const formattedMovies = movies.map((movie) => ({
      id: movie.id,
      title: movie.title,
      rating: movie.vote_average,
      releaseDate: movie.release_date,
    }));
    setRows(formattedMovies);
  }, [movies]);

  const handleProcessRowUpdate = async (newRow) => {
    await updateMovie(newRow.id, newRow.rating, newRow.releaseDate);
    return newRow;
  };
 


  const columns = [
    { field: 'title', headerName: 'Title', width: 200, editable: false },
    { field: 'rating', headerName: 'Rating', type: 'number', width: 130, editable: true},
    { field: 'releaseDate', headerName: 'Release Date', type: 'number', width: 180, editable: true },
  ];

  return (
    <div style={{ height: 600, width: '100%' ,backgroundColor:'white' ,}}>
      <DataGrid sx={{color : "black" ,fontWeight:'bold' } }
        rows={rows}
        columns={columns}
        pageSize={5}
        rowsPerPageOptions={[5]}
        processRowUpdate={handleProcessRowUpdate}
        experimentalFeatures={{ newEditingApi: true }}
      />
    </div>
  );
};

export default MovieList;
